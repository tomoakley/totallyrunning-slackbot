service: tm-stravabot

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline-ssm
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  myStage: ${opt:stage, 'dev'}
  serverless-offline-ssm:
    stages:
      - offline
  myEnvironment:
    SLACK_WEBHOOK:
      dev: ${ssm:/bighack-stravabot/dev/slack_webhook}
      prod: ${ssm:/bighack-stravabot/prod/slack_webhook}
    AUTH_LINK:
      dev: http://localhost:3000/auth
      prod: {
        'Fn::Join':
          [
            '',
            [
              'https://',
              { 'Ref': 'ApiGatewayRestApi' },
              '.execute-api.${self:provider.region}.amazonaws.com/${self:custom.myStage}/auth',
            ],
          ],
      }


provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  profile: stravabot
  environment:
    SLACK_WEBHOOK: ${self:custom.myEnvironment.SLACK_WEBHOOK.${self:custom.myStage}}
    AUTH_LINK: ${self:custom.myEnvironment.AUTH_LINK.${self:custom.myStage}}

functions:
  leaderboard:
    handler: src/leaderboard.leaderboard
    events:
      - http:
          path: leaderboard
          method: post
  authLink:
    handler: src/auth.auth
    events:
      - http:
          path: auth
          method: post
  auth:
    handler: src/auth.auth
    events:
      - http:
          path: auth
          method: get
  authCallback:
    handler: src/auth.authCallback
    events:
      - http:
          path: authCallback
          method: get
